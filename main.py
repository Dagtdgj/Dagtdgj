import telebot
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler
from datetime import datetime, timedelta
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —É—Ä–æ–≤–Ω—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                     level=logging.INFO)

bot = telebot.TeleBot('5974483976:AAEaC2vsU_Rl9GpbQ0Tp-7t2rlBA1z3NnLM')

users = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–º—É—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
muted_users = {}




@bot.message_handler(commands=["start"])
def start_command(message):
    bot.send_message(message.chat.id, """üëã–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä.

ü¶æ–Ø –º–æ–≥—É –≤—ã–¥–∞–≤–∞—Ç—å –º—É—Ç (/mute), –∫–∏–∫–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ (—Å–æ–æ–±—â–µ—Å—Ç–≤–∞) (/ban), –∞ —Ç–∞–∫–∂–µ –≤—ã–¥–∞–≤–∞—Ç—å —Ç–æ–ø-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è (/top) (–¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è BETA, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å). P.S. –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ /help

üëÄ–ß—Ç–æ–±—ã —è –º–æ–≥ —ç—Ç–æ –¥–µ–ª–∞—Ç—å, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —á–∞—Ç (—Å–æ–æ–±—â–µ—Å—Ç–≤–æ), –Ω–∞–∑–Ω–∞—á–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ–±—ã —É –º–µ–Ω—è –±—ã–ª –¥–æ—Å—Ç—É–ø –∫ —á–∞—Ç—É –∏ –Ω—É–∂–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º.

–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è/–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã - /help""")


@bot.message_handler(commands=["help"])
def start(m, res=False):
    bot.send_message(m.chat.id, """–≤–æ—Ç, —á—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —è —É–º–µ—é:

    /mute - –≤—ã–¥–∞–≤–∞—Ç—å –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–∞ 1 —á–∞—Å (3600 —Å–µ–∫)
    /ban - –∫–∏–∫–∞—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ –∏–∑ —á–∞—Ç–∞
    /top - –≤—ã–¥–∞–≤–∞—Ç—å —Ç–æ–ø - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è (–¥–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è BETA, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å)
    /new_update - –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—Å—è, –∞ —Ç–∞–∫ –∂–µ —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –±–æ—Ç–µ.

    —á—Ç–æ –±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–∞–º–∏, –≤—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –∏–ª–∏ –∂–µ –≤—ã–¥–∞—Ç—å –º—É—Ç.""")


@bot.message_handler(commands=["new_update"])
def new_update_command(message):
    user_name = message.from_user.first_name
    bot.send_message(message.chat.id, f"""–ü—Ä–∏–≤–µ—Ç, {user_name}! –¢—ã –ø–æ–ø–∞–ª(–∞) –≤ —Ä–∞–∑–¥–µ–ª '–Ω–æ–≤—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'. –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è, –∞ —Ç–∞–∫–∂–µ —Å–ø–∏—Å–æ–∫ —Ç–æ–≥–æ, —á—Ç–æ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ –±–æ—Ç–µ!

–í—ã—à–µ–¥—à–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:

1. –ù–∞—à –Ω–æ–≤—ã–π –¢–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π/–∏–¥–µ–π –¥–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ - @boostDlog_bot
2. –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–æ–º–∞–Ω–¥ /ban –∏ /mute
3. –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã: /idea
4. –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –±–∞–≥–∏ –∫–æ–º–∞–Ω–¥ /ban –∏ /mute

–°–∫–æ—Ä–æ:

1. –ù–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —É–ª—É—á—à–∞–µ–º–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞ –∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–æ–∫ + —Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥—ã /top
1.1. –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –∫–æ–º–∞–Ω–¥—ã /top""")


@bot.message_handler(commands=["idea"])
def start(m, res=False):
    bot.send_message(m.chat.id, """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª "–∏–¥–µ—è". –ú—ã —Å–æ–∑–¥–∞–ª–∏ –Ω–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é –¥–ª—è –Ω–∞—à–µ–≥–æ –ë–æ—Ç–∞-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞! –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –∏—Ö —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ —Ç–æ –ø–æ–º–µ–Ω—è—Ç—å, –∏ —Ç.–ø.. 

    –ñ–¥–µ–º –≤–∞—à–∏—Ö –∏–¥–µ–π –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–µ!  @boostDlog_bot""")


@bot.message_handler(commands=['top'])
def top_users(message):
    chat_id = message.chat.id
    today = datetime.today()
    yesterday = today - timedelta(days=1)
    top_users = []
    for user_id, message_count in users.items():
        user = bot.get_chat_member(chat_id, user_id)
        if user.status not in ['creator', 'administrator', 'bot']:
            user_messages = bot.get_chat_history(chat_id, limit=1000, user_id=user_id)
            count_today = sum(1 for m in user_messages if m.date.date() == today.date())
            count_yesterday = sum(1 for m in user_messages if m.date.date() == yesterday.date())
            top_users.append((user.user.first_name, count_today, count_yesterday))
    top_users = sorted(top_users, key=lambda x: x[1], reverse=True)[:3]
    if top_users:
        message_text = '–¢–æ–ø-3 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n'
        for i, user_data in enumerate(top_users):
            message_text += f"{i + 1}. {user_data[0]} - {user_data[1]} —Å–æ–æ–±—â–µ–Ω–∏–π\n"
        bot.send_message(chat_id, message_text)
    else:
        bot.send_message(chat_id, '–ù–∞ —Å–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π')

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ is_moderator
def is_moderator(chat_id, user_id):
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º
    return  # –ó–∞–º–µ–Ω–∏—Ç–µ —ç—Ç–æ –Ω–∞ –≤–∞—à—É –ª–æ–≥–∏–∫—É


@bot.message_handler(commands=['ban'])
def ban_command(message):
    if not message.reply_to_message:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.")
        return

    user_to_ban = message.reply_to_message.from_user
    if user_to_ban:
        user_id = user_to_ban.id
        chat_id = message.chat.id
        if not is_owner(chat_id, user_id):
            if user_id == bot.get_me().id:
                bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞.")
            elif user_id == message.from_user.id:
                bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")

            else:
                bot.send_message(
                    chat_id,
                    f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_to_ban.first_name}?",
                    reply_markup=get_confirmation_keyboard('ban', user_id),
                )
        else:
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞")
    else:
        bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.")

@bot.message_handler(commands=['mute'])
def mute_command(message):
    if not message.reply_to_message:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç.")
        return

    user_to_mute = message.reply_to_message.from_user
    if user_to_mute:
        user_id = user_to_mute.id
        chat_id = message.chat.id
        if user_id == bot.get_me().id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞.")
        elif user_id == message.from_user.id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        elif is_owner(chat_id, user_id):  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –º—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.")
        else:
            bot.send_message(
                chat_id,
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_to_mute.first_name} –Ω–∞ 1 —á–∞—Å?",
                reply_markup=get_confirmation_keyboard('mute', user_id),
            )
    else:
        bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞")



@bot.message_handler(commands=['ban'])
def ban_command(message):
    user_to_ban = message.reply_to_message.from_user
    if user_to_ban:
        user_id = user_to_ban.id
        chat_id = message.chat.id
        if not is_owner(chat_id, user_id):
            if user_id == bot.get_me().id:
                bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞.")
            elif user_id == message.from_user.id:
                bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
            else:
                bot.send_message(
                    chat_id,
                    f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_to_ban.first_name}?",
                    reply_markup=get_confirmation_keyboard('ban', user_id),
                )
        else:
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞")
    else:
        bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –±–∞–Ω–∞.")

@bot.message_handler(commands=['mute'])
def mute_command(message):
    if not message.reply_to_message:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç.")
        return

    user_to_mute = message.reply_to_message.from_user
    if user_to_mute:
        user_id = user_to_mute.id
        chat_id = message.chat.id
        if user_id == bot.get_me().id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞.")
        elif user_id == message.from_user.id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        elif is_owner(chat_id, user_id):  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –º—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.")
        else:
            bot.send_message(
                chat_id,
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_to_mute.first_name} –Ω–∞ 1 —á–∞—Å?",
                reply_markup=get_confirmation_keyboard('mute', user_id),
            )
    else:
        bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞")




@bot.message_handler(commands=['ban'])
def ban_command(message):
    user_to_ban = message.reply_to_message.from_user
    if user_to_ban:
        user_id = user_to_ban.id
        chat_id = message.chat.id
        if not is_owner(chat_id, user_id):
            bot.send_message(
                chat_id,
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_to_ban.first_name}?",
                reply_markup=get_confirmation_keyboard('ban', user_id),
            )
        else:
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞")

@bot.message_handler(commands=['mute'])
def mute_command(message):
    if not message.reply_to_message:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç.")
        return

    user_to_mute = message.reply_to_message.from_user
    if user_to_mute:
        user_id = user_to_mute.id
        chat_id = message.chat.id
        if user_id == bot.get_me().id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ –±–æ—Ç–∞.")
        elif user_id == message.from_user.id:
            bot.send_message(chat_id, "–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Å–≤–æ–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.")
        elif is_owner(chat_id, user_id):  # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞
            bot.send_message(chat_id, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –º—É—Ç –≤–ª–∞–¥–µ–ª—å—Ü—É —á–∞—Ç–∞.")
        else:
            bot.send_message(
                chat_id,
                f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_to_mute.first_name} –Ω–∞ 1 —á–∞—Å?",
                reply_markup=get_confirmation_keyboard('mute', user_id),
            )
    else:
        bot.send_message(chat_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–¥–∞—á–∏ –º—É—Ç–∞")





def get_confirmation_keyboard(action, user_id):
    confirm_button = InlineKeyboardButton(
        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
        callback_data=f'confirm_{action}_{user_id}',
    )
    cancel_button = InlineKeyboardButton(
        '–û—Ç–º–µ–Ω–∞',
        callback_data=f'cancel_{action}_{user_id}',
    )
    keyboard = InlineKeyboardMarkup().add(confirm_button, cancel_button)
    return keyboard

def is_owner(chat_id, user_id):
    chat_member = bot.get_chat_member(chat_id, user_id)
    return chat_member.status == 'creator'

@bot.callback_query_handler(func=lambda call: True)
def handle_button_click(call):
    if call.data.startswith('confirm'):
        command, user_id = call.data.split('_')[1], call.data.split('_')[2]
        if command == 'ban':
            chat_id = call.message.chat.id
            if not is_owner(chat_id, user_id):
                bot.kick_chat_member(chat_id, user_id)
                bot.answer_callback_query(call.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∏–∫–Ω—É—Ç –∏–∑ —á–∞—Ç–∞')
            else:
                bot.answer_callback_query(call.id, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ —á–∞—Ç–∞')
        elif command == 'mute':
            chat_id = call.message.chat.id
            bot.restrict_chat_member(chat_id, user_id, until_date=datetime.now() + timedelta(seconds=3600))
            bot.answer_callback_query(call.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–¥–∞–Ω –º—É—Ç –Ω–∞ 1 —á–∞—Å')
        bot.delete_message(chat_id, call.message.message_id)

    elif call.data.startswith('cancel'):
        chat_id = call.message.chat.id
        bot.delete_message(chat_id, call.message.message_id)
        bot.answer_callback_query(call.id, '–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ')


try:
    bot.polling()
except telebot.apihelper.ApiTelegramException as e:
    print(f"An error occurred while polling the bot: {str(e)}")
